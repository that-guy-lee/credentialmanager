{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeak\\\\Desktop\\\\blah\\\\credentials-manager\\\\frontend\\\\src\\\\components\\\\components\\\\AddCredential.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // redux hooks\n\nimport { useDispatch } from 'react-redux'; // bootstrap components\n\nimport Form from 'react-bootstrap/Form';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button'; // redux actions\n\nimport { toggleAdd } from '../../redux/features/dashboardSlice';\nimport { setActions } from '../../redux/features/orgUnitSlice';\n/**\r\n *\r\n * @returns a form that the user can use to add credentials\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddCredential() {\n  _s();\n\n  // dispatch assigned the value of the useDispatch hook\n  const dispatch = useDispatch(); // local state variables used for the form submission details\n\n  const [orgUnit, setOrgUnit] = useState('');\n  const [division, setDivision] = useState('');\n  const [service, setService] = useState('');\n  const [login, setLogin] = useState('');\n  const [password, setPassword] = useState('');\n  /*\r\n   *handle(input)Change functions\r\n   each handle function below fires\r\n   the corresponding local state set function\r\n   and sets the local state to the event value\r\n   * */\n\n  const handleOrgUnitChange = e => {\n    setOrgUnit(e.target.value);\n  };\n\n  const handleDivisionChange = e => {\n    setDivision(e.target.value);\n  };\n\n  const handleServiceChange = e => {\n    setService(e.target.value);\n  };\n\n  const handleLoginChange = e => {\n    setLogin(e.target.value);\n  };\n\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  /**\r\n   * handleSubmission function\r\n   * this function submits the users entry data to the database\r\n   * the users token is retrieved from the local storage\r\n   * payload object is assigned the local state variables as attributes\r\n   * the fetch request is wrapped in a try catch block for error handling\r\n   * fetch request contains the token as header and payload as body\r\n   * if successful,\r\n   * the user is alerted and the setActions & toggleAdd actions are fired\r\n   * if not the error is logged to the console\r\n   */\n\n\n  const handleSubmission = async () => {\n    const token = localStorage.getItem('token');\n    const payload = {\n      orgUnit,\n      division,\n      credentials: {\n        serviceName: service,\n        loginName: login,\n        password\n      }\n    };\n\n    try {\n      const response = await fetch('units/add/credentials', {\n        method: 'POST',\n        headers: {\n          authorization: `${token}`,\n          'Content-type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n\n      if (result.status === 'ok') {\n        alert('Successfully added credential');\n        dispatch(setActions());\n        dispatch(toggleAdd());\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  /**\r\n   * bootstrap components are used for layout with some custom styling\r\n   * each Form.Control (input field) has an onChange event that fires,\r\n   * the corresponding handle(input)change function\r\n   * the submit button has an onClick event that fires the handleSubmission function\r\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"col-md-8 border\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center p-5\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-5 ui-form-outer\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          className: \"p-5\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formOrgUnit\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Organisational Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"news management\",\n              onChange: handleOrgUnitChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"please enter one of: news management, software reviews, hardware reviews, opinion publishing\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formDivision\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Division\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"finance\",\n              onChange: handleDivisionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"please enter one of: it, management, finance, development, public relations, writing, security, research, admin, proofreaders\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formService\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Service:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"github\",\n              onChange: handleServiceChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"please enter the name of the service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formLoginName\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Login name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"cooltechcode\",\n              onChange: handleLoginChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"please enter the login name used for the service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"formPassword\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \" Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"password\",\n              placeholder: \"cooltechcode\",\n              onChange: handlePasswordChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n              className: \"text-muted\",\n              children: \"please enter the password used for the service\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            type: \"button\",\n            onClick: handleSubmission,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddCredential, \"myowQ7uuPB22sBWooTASR0+fmws=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddCredential;\nexport default AddCredential;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCredential\");","map":{"version":3,"sources":["C:/Users/leeak/Desktop/blah/credentials-manager/frontend/src/components/components/AddCredential.jsx"],"names":["React","useState","useDispatch","Form","Container","Row","Col","Button","toggleAdd","setActions","AddCredential","dispatch","orgUnit","setOrgUnit","division","setDivision","service","setService","login","setLogin","password","setPassword","handleOrgUnitChange","e","target","value","handleDivisionChange","handleServiceChange","handleLoginChange","handlePasswordChange","handleSubmission","token","localStorage","getItem","payload","credentials","serviceName","loginName","response","fetch","method","headers","authorization","body","JSON","stringify","result","json","status","alert","err","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,MAAP,MAAmB,wBAAnB,C,CACA;;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA,SAASC,UAAT,QAA2B,mCAA3B;AACA;AACA;AACA;AACA;;;;AACA,SAASC,aAAT,GAAyB;AAAA;;AACvB;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B,CAFuB,CAGvB;;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAAC,EAAD,CAAxC;AACA;AACF;AACA;AACA;AACA;AACA;;AACE,QAAMqB,mBAAmB,GAAIC,CAAD,IAAO;AACjCV,IAAAA,UAAU,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMC,oBAAoB,GAAIH,CAAD,IAAO;AAClCR,IAAAA,WAAW,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;;AAIA,QAAME,mBAAmB,GAAIJ,CAAD,IAAO;AACjCN,IAAAA,UAAU,CAACM,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACD,GAFD;;AAIA,QAAMG,iBAAiB,GAAIL,CAAD,IAAO;AAC/BJ,IAAAA,QAAQ,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIA,QAAMI,oBAAoB,GAAIN,CAAD,IAAO;AAClCF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,GAFD;AAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,QAAMK,gBAAgB,GAAG,YAAY;AACnC,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAG;AACdtB,MAAAA,OADc;AAEdE,MAAAA,QAFc;AAGdqB,MAAAA,WAAW,EAAE;AACXC,QAAAA,WAAW,EAAEpB,OADF;AAEXqB,QAAAA,SAAS,EAAEnB,KAFA;AAGXE,QAAAA;AAHW;AAHC,KAAhB;;AASA,QAAI;AACF,YAAMkB,QAAQ,GAAG,MAAMC,KAAK,CAAC,uBAAD,EAA0B;AACpDC,QAAAA,MAAM,EAAE,MAD4C;AAEpDC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,GAAEX,KAAM,EADjB;AAEP,0BAAgB;AAFT,SAF2C;AAMpDY,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,OAAf;AAN8C,OAA1B,CAA5B;AAQA,YAAMY,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAArB;;AACA,UAAID,MAAM,CAACE,MAAP,KAAkB,IAAtB,EAA4B;AAC1BC,QAAAA,KAAK,CAAC,+BAAD,CAAL;AACAtC,QAAAA,QAAQ,CAACF,UAAU,EAAX,CAAR;AACAE,QAAAA,QAAQ,CAACH,SAAS,EAAV,CAAR;AACD;AACF,KAfD,CAeE,OAAO0C,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GA7BD;AA8BA;AACF;AACA;AACA;AACA;AACA;;;AACE,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA,2BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,EAAC,KAAhB;AAAA,kCACE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,aAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,iBAFd;AAGE,cAAA,QAAQ,EAAE5B;AAHZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAaE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,cAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,SAFd;AAGE,cAAA,QAAQ,EAAEI;AAHZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eA0BE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,aAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,QAFd;AAGE,cAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1BF,eAqCE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,eAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,MADP;AAEE,cAAA,WAAW,EAAC,cAFd;AAGE,cAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCF,eAgDE,QAAC,IAAD,CAAM,KAAN;AAAY,YAAA,SAAS,EAAC,MAAtB;AAA6B,YAAA,SAAS,EAAC,cAAvC;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,cAAA,IAAI,EAAC,UADP;AAEE,cAAA,WAAW,EAAC,cAFd;AAGE,cAAA,QAAQ,EAAEC;AAHZ;AAAA;AAAA;AAAA;AAAA,oBAFF,eAOE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhDF,eA2DE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAC,SAAhB;AAA0B,YAAA,IAAI,EAAC,QAA/B;AAAwC,YAAA,OAAO,EAAEC,gBAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3DF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuED;;GAxJQpB,a;UAEUR,W;;;KAFVQ,a;AA0JT,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react';\r\n// redux hooks\r\nimport { useDispatch } from 'react-redux';\r\n// bootstrap components\r\nimport Form from 'react-bootstrap/Form';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Button from 'react-bootstrap/Button';\r\n// redux actions\r\nimport { toggleAdd } from '../../redux/features/dashboardSlice';\r\nimport { setActions } from '../../redux/features/orgUnitSlice';\r\n/**\r\n *\r\n * @returns a form that the user can use to add credentials\r\n */\r\nfunction AddCredential() {\r\n  // dispatch assigned the value of the useDispatch hook\r\n  const dispatch = useDispatch();\r\n  // local state variables used for the form submission details\r\n  const [orgUnit, setOrgUnit] = useState('');\r\n  const [division, setDivision] = useState('');\r\n  const [service, setService] = useState('');\r\n  const [login, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  /*\r\n   *handle(input)Change functions\r\n   each handle function below fires\r\n   the corresponding local state set function\r\n   and sets the local state to the event value\r\n   * */\r\n  const handleOrgUnitChange = (e) => {\r\n    setOrgUnit(e.target.value);\r\n  };\r\n\r\n  const handleDivisionChange = (e) => {\r\n    setDivision(e.target.value);\r\n  };\r\n\r\n  const handleServiceChange = (e) => {\r\n    setService(e.target.value);\r\n  };\r\n\r\n  const handleLoginChange = (e) => {\r\n    setLogin(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n  /**\r\n   * handleSubmission function\r\n   * this function submits the users entry data to the database\r\n   * the users token is retrieved from the local storage\r\n   * payload object is assigned the local state variables as attributes\r\n   * the fetch request is wrapped in a try catch block for error handling\r\n   * fetch request contains the token as header and payload as body\r\n   * if successful,\r\n   * the user is alerted and the setActions & toggleAdd actions are fired\r\n   * if not the error is logged to the console\r\n   */\r\n  const handleSubmission = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const payload = {\r\n      orgUnit,\r\n      division,\r\n      credentials: {\r\n        serviceName: service,\r\n        loginName: login,\r\n        password,\r\n      },\r\n    };\r\n    try {\r\n      const response = await fetch('units/add/credentials', {\r\n        method: 'POST',\r\n        headers: {\r\n          authorization: `${token}`,\r\n          'Content-type': 'application/json',\r\n        },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const result = await response.json();\r\n      if (result.status === 'ok') {\r\n        alert('Successfully added credential');\r\n        dispatch(setActions());\r\n        dispatch(toggleAdd());\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n  /**\r\n   * bootstrap components are used for layout with some custom styling\r\n   * each Form.Control (input field) has an onChange event that fires,\r\n   * the corresponding handle(input)change function\r\n   * the submit button has an onClick event that fires the handleSubmission function\r\n   */\r\n  return (\r\n    <Col className=\"col-md-8 border\">\r\n      <Row className=\"justify-content-center p-5\">\r\n        <Col className=\"col-md-5 ui-form-outer\">\r\n          <Form className=\"p-5\">\r\n            <Form.Group className=\"mb-3\" controlId=\"formOrgUnit\">\r\n              <Form.Label> Organisational Unit</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"news management\"\r\n                onChange={handleOrgUnitChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                please enter one of: news management, software reviews, hardware\r\n                reviews, opinion publishing\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formDivision\">\r\n              <Form.Label> Division</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"finance\"\r\n                onChange={handleDivisionChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                please enter one of: it, management, finance, development,\r\n                public relations, writing, security, research, admin,\r\n                proofreaders\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formService\">\r\n              <Form.Label> Service:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"github\"\r\n                onChange={handleServiceChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                please enter the name of the service\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formLoginName\">\r\n              <Form.Label> Login name:</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"cooltechcode\"\r\n                onChange={handleLoginChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                please enter the login name used for the service\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Form.Group className=\"mb-3\" controlId=\"formPassword\">\r\n              <Form.Label> Password:</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                placeholder=\"cooltechcode\"\r\n                onChange={handlePasswordChange}\r\n              />\r\n              <Form.Text className=\"text-muted\">\r\n                please enter the password used for the service\r\n              </Form.Text>\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"button\" onClick={handleSubmission}>\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default AddCredential;\r\n"]},"metadata":{},"sourceType":"module"}