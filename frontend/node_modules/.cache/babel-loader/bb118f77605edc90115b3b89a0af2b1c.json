{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeak\\\\Desktop\\\\blah\\\\credentials-manager\\\\frontend\\\\src\\\\components\\\\components\\\\Credentials.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport PropTypes from 'prop-types';\nimport Spinner from 'react-bootstrap/Spinner';\nimport Divisions from './Divisions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Credentials(_ref) {\n  _s();\n\n  let {\n    orgData\n  } = _ref;\n  const dataStatus = useSelector(state => state.orgData.status);\n  const dataError = useSelector(state => state.orgData.error);\n  let newsManagementArr;\n  let softwareReviewsArr;\n  let hardwareReviewsArr;\n  let opinionPublishArr;\n\n  const isArrNotEmpty = arr => {\n    if (arr.length === 0) {\n      return false;\n    }\n\n    return true;\n  };\n\n  if (typeof orgData === 'object' && dataStatus === 'success') {\n    newsManagementArr = orgData.newsManagement;\n    softwareReviewsArr = orgData.softwareReviews;\n    hardwareReviewsArr = orgData.hardwareReviews;\n    opinionPublishArr = orgData.opinionPublishing;\n  }\n\n  const displayController = status => {\n    if (status === 'pending' || status === '' || status === undefined) {\n      return /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        role: \"status\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this);\n    }\n\n    if (status === 'rejected') {\n      return /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\" \", `${dataError}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (status === 'success') {\n      let key = 0;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: isArrNotEmpty(newsManagementArr) && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"News management\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \" d-flex justify-content-center\",\n          children: isArrNotEmpty(newsManagementArr) && newsManagementArr.map(newsCred => /*#__PURE__*/_jsxDEV(Divisions, {\n            unitName: newsCred.unitName,\n            divisions: newsCred.divisions,\n            isArrNotEmpty: isArrNotEmpty\n          }, key += 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: isArrNotEmpty(softwareReviewsArr) && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Software Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: isArrNotEmpty(softwareReviewsArr) && softwareReviewsArr.map(softCred => /*#__PURE__*/_jsxDEV(Divisions, {\n            unitName: softCred.unitName,\n            divisions: softCred.divisions,\n            isArrNotEmpty: isArrNotEmpty\n          }, key += 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: isArrNotEmpty(hardwareReviewsArr) && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Hardware Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 51\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: isArrNotEmpty(hardwareReviewsArr) && hardwareReviewsArr.map(hardCred => /*#__PURE__*/_jsxDEV(Divisions, {\n            unitName: hardCred.unitName,\n            divisions: hardCred.divisions,\n            isArrNotEmpty: isArrNotEmpty\n          }, key += 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: isArrNotEmpty(opinionPublishArr) && /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Opinion Publishing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: isArrNotEmpty(opinionPublishArr) && opinionPublishArr.map(opinionCred => /*#__PURE__*/_jsxDEV(Divisions, {\n            unitName: opinionCred.unitName,\n            divisions: opinionCred.divisions,\n            isArrNotEmpty: isArrNotEmpty\n          }, key += 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\" \", `${dataError}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 12\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-12\",\n        children: displayController(dataStatus)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Credentials, \"nQM+wFKYqU9xdaCManjlv84nxFA=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Credentials;\nCredentials.propTypes = {\n  orgData: PropTypes.object.isRequired\n};\nexport default Credentials;\n\nvar _c;\n\n$RefreshReg$(_c, \"Credentials\");","map":{"version":3,"sources":["C:/Users/leeak/Desktop/blah/credentials-manager/frontend/src/components/components/Credentials.jsx"],"names":["React","useSelector","Container","Row","Col","PropTypes","Spinner","Divisions","Credentials","orgData","dataStatus","state","status","dataError","error","newsManagementArr","softwareReviewsArr","hardwareReviewsArr","opinionPublishArr","isArrNotEmpty","arr","length","newsManagement","softwareReviews","hardwareReviews","opinionPublishing","displayController","undefined","key","map","newsCred","unitName","divisions","softCred","hardCred","opinionCred","propTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;;AAEA,SAASC,WAAT,OAAkC;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAChC,QAAMC,UAAU,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACF,OAAN,CAAcG,MAA1B,CAA9B;AACA,QAAMC,SAAS,GAAGZ,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACF,OAAN,CAAcK,KAA1B,CAA7B;AACA,MAAIC,iBAAJ;AACA,MAAIC,kBAAJ;AACA,MAAIC,kBAAJ;AACA,MAAIC,iBAAJ;;AACA,QAAMC,aAAa,GAAIC,GAAD,IAAS;AAC7B,QAAIA,GAAG,CAACC,MAAJ,KAAe,CAAnB,EAAsB;AACpB,aAAO,KAAP;AACD;;AACD,WAAO,IAAP;AACD,GALD;;AAOA,MAAI,OAAOZ,OAAP,KAAmB,QAAnB,IAA+BC,UAAU,KAAK,SAAlD,EAA6D;AAC3DK,IAAAA,iBAAiB,GAAGN,OAAO,CAACa,cAA5B;AACAN,IAAAA,kBAAkB,GAAGP,OAAO,CAACc,eAA7B;AACAN,IAAAA,kBAAkB,GAAGR,OAAO,CAACe,eAA7B;AACAN,IAAAA,iBAAiB,GAAGT,OAAO,CAACgB,iBAA5B;AACD;;AAED,QAAMC,iBAAiB,GAAId,MAAD,IAAY;AACpC,QAAIA,MAAM,KAAK,SAAX,IAAwBA,MAAM,KAAK,EAAnC,IAAyCA,MAAM,KAAKe,SAAxD,EAAmE;AACjE,0BACE,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,IAAI,EAAC,QAAjC;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAKD;;AACD,QAAIf,MAAM,KAAK,UAAf,EAA2B;AACzB,0BAAO;AAAA,wBAAO,GAAEC,SAAU,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AAED,QAAID,MAAM,KAAK,SAAf,EAA0B;AACxB,UAAIgB,GAAG,GAAG,CAAV;AACA,0BACE;AAAA,gCACE,QAAC,GAAD;AAAA,oBACGT,aAAa,CAACJ,iBAAD,CAAb,iBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADvC;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,gCAAf;AAAA,oBACGI,aAAa,CAACJ,iBAAD,CAAb,IACCA,iBAAiB,CAACc,GAAlB,CAAuBC,QAAD,iBACpB,QAAC,SAAD;AAEE,YAAA,QAAQ,EAAEA,QAAQ,CAACC,QAFrB;AAGE,YAAA,SAAS,EAAED,QAAQ,CAACE,SAHtB;AAIE,YAAA,aAAa,EAAEb;AAJjB,aACQS,GAAG,IAAI,CADf;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAJF,eAeE,QAAC,GAAD;AAAA,oBACGT,aAAa,CAACH,kBAAD,CAAb,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADxC;AAAA;AAAA;AAAA;AAAA,gBAfF,eAkBE,QAAC,GAAD;AAAA,oBACGG,aAAa,CAACH,kBAAD,CAAb,IACCA,kBAAkB,CAACa,GAAnB,CAAwBI,QAAD,iBACrB,QAAC,SAAD;AAEE,YAAA,QAAQ,EAAEA,QAAQ,CAACF,QAFrB;AAGE,YAAA,SAAS,EAAEE,QAAQ,CAACD,SAHtB;AAIE,YAAA,aAAa,EAAEb;AAJjB,aACQS,GAAG,IAAI,CADf;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAlBF,eA6BE,QAAC,GAAD;AAAA,oBACGT,aAAa,CAACF,kBAAD,CAAb,iBAAqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADxC;AAAA;AAAA;AAAA;AAAA,gBA7BF,eAgCE,QAAC,GAAD;AAAA,oBACGE,aAAa,CAACF,kBAAD,CAAb,IACCA,kBAAkB,CAACY,GAAnB,CAAwBK,QAAD,iBACrB,QAAC,SAAD;AAEE,YAAA,QAAQ,EAAEA,QAAQ,CAACH,QAFrB;AAGE,YAAA,SAAS,EAAEG,QAAQ,CAACF,SAHtB;AAIE,YAAA,aAAa,EAAEb;AAJjB,aACQS,GAAG,IAAI,CADf;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAhCF,eA2CE,QAAC,GAAD;AAAA,oBACGT,aAAa,CAACD,iBAAD,CAAb,iBAAoC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADvC;AAAA;AAAA;AAAA;AAAA,gBA3CF,eA8CE,QAAC,GAAD;AAAA,oBACGC,aAAa,CAACD,iBAAD,CAAb,IACCA,iBAAiB,CAACW,GAAlB,CAAuBM,WAAD,iBACpB,QAAC,SAAD;AAEE,YAAA,QAAQ,EAAEA,WAAW,CAACJ,QAFxB;AAGE,YAAA,SAAS,EAAEI,WAAW,CAACH,SAHzB;AAIE,YAAA,aAAa,EAAEb;AAJjB,aACQS,GAAG,IAAI,CADf;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA,gBA9CF;AAAA,sBADF;AA4DD;;AAED,wBAAO;AAAA,sBAAO,GAAEf,SAAU,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GA7ED;;AA+EA,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBAA4Ba,iBAAiB,CAAChB,UAAD;AAA7C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GA3GQF,W;UACYP,W,EACDA,W;;;KAFXO,W;AA6GTA,WAAW,CAAC4B,SAAZ,GAAwB;AACtB3B,EAAAA,OAAO,EAAEJ,SAAS,CAACgC,MAAV,CAAiBC;AADJ,CAAxB;AAIA,eAAe9B,WAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\nimport Divisions from './Divisions';\r\n\r\nfunction Credentials({ orgData }) {\r\n  const dataStatus = useSelector((state) => state.orgData.status);\r\n  const dataError = useSelector((state) => state.orgData.error);\r\n  let newsManagementArr;\r\n  let softwareReviewsArr;\r\n  let hardwareReviewsArr;\r\n  let opinionPublishArr;\r\n  const isArrNotEmpty = (arr) => {\r\n    if (arr.length === 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  if (typeof orgData === 'object' && dataStatus === 'success') {\r\n    newsManagementArr = orgData.newsManagement;\r\n    softwareReviewsArr = orgData.softwareReviews;\r\n    hardwareReviewsArr = orgData.hardwareReviews;\r\n    opinionPublishArr = orgData.opinionPublishing;\r\n  }\r\n\r\n  const displayController = (status) => {\r\n    if (status === 'pending' || status === '' || status === undefined) {\r\n      return (\r\n        <Spinner animation=\"border\" role=\"status\">\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n      );\r\n    }\r\n    if (status === 'rejected') {\r\n      return <h4> {`${dataError}`}</h4>;\r\n    }\r\n\r\n    if (status === 'success') {\r\n      let key = 0;\r\n      return (\r\n        <>\r\n          <Row>\r\n            {isArrNotEmpty(newsManagementArr) && <h4>News management</h4>}\r\n          </Row>\r\n          <Row className=\" d-flex justify-content-center\">\r\n            {isArrNotEmpty(newsManagementArr) &&\r\n              newsManagementArr.map((newsCred) => (\r\n                <Divisions\r\n                  key={(key += 1)}\r\n                  unitName={newsCred.unitName}\r\n                  divisions={newsCred.divisions}\r\n                  isArrNotEmpty={isArrNotEmpty}\r\n                />\r\n              ))}\r\n          </Row>\r\n          <Row>\r\n            {isArrNotEmpty(softwareReviewsArr) && <h4>Software Reviews</h4>}\r\n          </Row>\r\n          <Row>\r\n            {isArrNotEmpty(softwareReviewsArr) &&\r\n              softwareReviewsArr.map((softCred) => (\r\n                <Divisions\r\n                  key={(key += 1)}\r\n                  unitName={softCred.unitName}\r\n                  divisions={softCred.divisions}\r\n                  isArrNotEmpty={isArrNotEmpty}\r\n                />\r\n              ))}\r\n          </Row>\r\n          <Row>\r\n            {isArrNotEmpty(hardwareReviewsArr) && <h4>Hardware Reviews</h4>}\r\n          </Row>\r\n          <Row>\r\n            {isArrNotEmpty(hardwareReviewsArr) &&\r\n              hardwareReviewsArr.map((hardCred) => (\r\n                <Divisions\r\n                  key={(key += 1)}\r\n                  unitName={hardCred.unitName}\r\n                  divisions={hardCred.divisions}\r\n                  isArrNotEmpty={isArrNotEmpty}\r\n                />\r\n              ))}\r\n          </Row>\r\n          <Row>\r\n            {isArrNotEmpty(opinionPublishArr) && <h4>Opinion Publishing</h4>}\r\n          </Row>\r\n          <Row>\r\n            {isArrNotEmpty(opinionPublishArr) &&\r\n              opinionPublishArr.map((opinionCred) => (\r\n                <Divisions\r\n                  key={(key += 1)}\r\n                  unitName={opinionCred.unitName}\r\n                  divisions={opinionCred.divisions}\r\n                  isArrNotEmpty={isArrNotEmpty}\r\n                />\r\n              ))}\r\n          </Row>\r\n        </>\r\n      );\r\n    }\r\n\r\n    return <h4> {`${dataError}`}</h4>;\r\n  };\r\n\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col className=\"col-md-12\">{displayController(dataStatus)}</Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nCredentials.propTypes = {\r\n  orgData: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Credentials;\r\n"]},"metadata":{},"sourceType":"module"}