{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeak\\\\Desktop\\\\blah\\\\credentials-manager\\\\frontend\\\\src\\\\components\\\\components\\\\Divisions.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // bootstrap components are imported\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // load component imported\n\nimport Credential from './Credential';\n/**\r\n * Divisions component\r\n * used to sort the credentials by the users divisions\r\n * @param {*} props unitName, divisions, isArrNotEmpty\r\n * @returns division heading and credentials\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Divisions(_ref) {\n  let {\n    unitName,\n    divisions,\n    isArrNotEmpty\n  } = _ref;\n  const orgName = unitName;\n  const {\n    divisionName\n  } = divisions; // credentials assigned to credentials array\n\n  const credentialsArr = divisions.credentials;\n  let key = 0;\n  /**\r\n   * bootstrap components used for layout\r\n   * division text value displayed\r\n   * JSX conditional logic is used with the isArrNotEmpty function (checking if credentials exists)\r\n   * if so, the credentialsArr is iterated over and on each iteration the a Credential component is,\r\n   * returned with props\r\n   */\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      className: \"division-name-container\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"division-name\",\n        children: divisionName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-12 credentials-container\",\n        children: isArrNotEmpty(credentialsArr) && credentialsArr.map(creds => /*#__PURE__*/_jsxDEV(Credential, {\n          serviceName: creds.serviceName,\n          loginName: creds.loginName,\n          divisionName: divisionName,\n          unitName: orgName,\n          password: creds.password,\n          id: creds._id\n        }, `${creds.id}${key += 1}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n} // prop type validation\n\n\n_c = Divisions;\nDivisions.propTypes = {\n  unitName: PropTypes.string.isRequired,\n  divisions: PropTypes.object.isRequired,\n  isArrNotEmpty: PropTypes.func.isRequired\n};\nexport default Divisions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Divisions\");","map":{"version":3,"sources":["C:/Users/leeak/Desktop/blah/credentials-manager/frontend/src/components/components/Divisions.jsx"],"names":["React","PropTypes","Container","Row","Col","Credential","Divisions","unitName","divisions","isArrNotEmpty","orgName","divisionName","credentialsArr","credentials","key","map","creds","serviceName","loginName","password","_id","id","propTypes","string","isRequired","object","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,SAAT,OAA2D;AAAA,MAAxC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,SAAZ;AAAuBC,IAAAA;AAAvB,GAAwC;AACzD,QAAMC,OAAO,GAAGH,QAAhB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAmBH,SAAzB,CAFyD,CAGzD;;AACA,QAAMI,cAAc,GAAGJ,SAAS,CAACK,WAAjC;AACA,MAAIC,GAAG,GAAG,CAAV;AACA;AACF;AACA;AACA;AACA;AACA;AACA;;AACE,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA,kBAA+BH;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,kBACGF,aAAa,CAACG,cAAD,CAAb,IACCA,cAAc,CAACG,GAAf,CAAoBC,KAAD,iBACjB,QAAC,UAAD;AAEE,UAAA,WAAW,EAAEA,KAAK,CAACC,WAFrB;AAGE,UAAA,SAAS,EAAED,KAAK,CAACE,SAHnB;AAIE,UAAA,YAAY,EAAEP,YAJhB;AAKE,UAAA,QAAQ,EAAED,OALZ;AAME,UAAA,QAAQ,EAAEM,KAAK,CAACG,QANlB;AAOE,UAAA,EAAE,EAAEH,KAAK,CAACI;AAPZ,WACQ,GAAEJ,KAAK,CAACK,EAAG,GAAGP,GAAG,IAAI,CAAG,EADhC;AAAA;AAAA;AAAA;AAAA,gBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,C,CACD;;;KArCSR,S;AAsCTA,SAAS,CAACgB,SAAV,GAAsB;AACpBf,EAAAA,QAAQ,EAAEN,SAAS,CAACsB,MAAV,CAAiBC,UADP;AAEpBhB,EAAAA,SAAS,EAAEP,SAAS,CAACwB,MAAV,CAAiBD,UAFR;AAGpBf,EAAAA,aAAa,EAAER,SAAS,CAACyB,IAAV,CAAeF;AAHV,CAAtB;AAMA,eAAelB,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// bootstrap components are imported\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n// load component imported\r\nimport Credential from './Credential';\r\n/**\r\n * Divisions component\r\n * used to sort the credentials by the users divisions\r\n * @param {*} props unitName, divisions, isArrNotEmpty\r\n * @returns division heading and credentials\r\n */\r\nfunction Divisions({ unitName, divisions, isArrNotEmpty }) {\r\n  const orgName = unitName;\r\n  const { divisionName } = divisions;\r\n  // credentials assigned to credentials array\r\n  const credentialsArr = divisions.credentials;\r\n  let key = 0;\r\n  /**\r\n   * bootstrap components used for layout\r\n   * division text value displayed\r\n   * JSX conditional logic is used with the isArrNotEmpty function (checking if credentials exists)\r\n   * if so, the credentialsArr is iterated over and on each iteration the a Credential component is,\r\n   * returned with props\r\n   */\r\n  return (\r\n    <Container fluid>\r\n      <Row className=\"division-name-container\">\r\n        <h5 className=\"division-name\">{divisionName}</h5>\r\n      </Row>\r\n      <Row className=\"justify-content-center\">\r\n        <Col className=\"col-md-12 credentials-container\">\r\n          {isArrNotEmpty(credentialsArr) &&\r\n            credentialsArr.map((creds) => (\r\n              <Credential\r\n                key={`${creds.id}${(key += 1)}`}\r\n                serviceName={creds.serviceName}\r\n                loginName={creds.loginName}\r\n                divisionName={divisionName}\r\n                unitName={orgName}\r\n                password={creds.password}\r\n                id={creds._id}\r\n              />\r\n            ))}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n// prop type validation\r\nDivisions.propTypes = {\r\n  unitName: PropTypes.string.isRequired,\r\n  divisions: PropTypes.object.isRequired,\r\n  isArrNotEmpty: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Divisions;\r\n"]},"metadata":{},"sourceType":"module"}