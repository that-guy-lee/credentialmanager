{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeak\\\\Desktop\\\\blah\\\\credentials-manager\\\\frontend\\\\src\\\\components\\\\components\\\\users\\\\UserDivisions.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // import redux hook\n\nimport { useDispatch } from 'react-redux'; // importing bootstrap component\n\nimport Col from 'react-bootstrap/Col'; // local redux action imported\n\nimport { setUserActions } from '../../../redux/features/usersSlice';\n/**\r\n * UserDivisions component\r\n * renders the users divisions\r\n * @param {*} props id, division, orgUnit\r\n * @returns the divisions the user has access to\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserDivisions(_ref) {\n  _s();\n\n  let {\n    id,\n    division,\n    orgUnit\n  } = _ref;\n  // dispatch assigned the value of the useDispatch hook\n  const dispatch = useDispatch();\n  /**\r\n   * handlesDivisionRemove\r\n   * allows the user to remove a users permissions to a specific division.\r\n   * token retrieved from local storage\r\n   * payload object assigned the component props as attributes\r\n   * fetch request wrapped in a try catch block for error handling\r\n   * header contains the token and the body contains the payload\r\n   * if successful user is alerted and the setUsersAction is fired\r\n   * if not, user is alerted of the error\r\n   */\n\n  const handleDivisionRemove = async () => {\n    const token = localStorage.getItem('token');\n    const payload = {\n      id,\n      orgUnit,\n      division\n    };\n\n    try {\n      const response = await fetch('user/remove/division', {\n        method: 'PUT',\n        headers: {\n          authorization: token,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      const result = await response.json();\n\n      if (result.status === 'ok') {\n        alert(result.message);\n        dispatch(setUserActions());\n      }\n    } catch (err) {\n      alert(err.message);\n    }\n  };\n  /**\r\n   * User division is returned here\r\n   * with division prop as text value\r\n   * the remove button has an onClick event that fires the handleDivisionRemove function\r\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(Col, {\n    className: \"col-md-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      children: \" division:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: division\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-danger\",\n      type: \"button\",\n      onClick: handleDivisionRemove,\n      children: \"remove\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n} // propType validation\n\n\n_s(UserDivisions, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = UserDivisions;\nUserDivisions.propTypes = {\n  id: PropTypes.string.isRequired,\n  division: PropTypes.string.isRequired,\n  orgUnit: PropTypes.string.isRequired\n};\nexport default UserDivisions;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserDivisions\");","map":{"version":3,"sources":["C:/Users/leeak/Desktop/blah/credentials-manager/frontend/src/components/components/users/UserDivisions.jsx"],"names":["React","PropTypes","useDispatch","Col","setUserActions","UserDivisions","id","division","orgUnit","dispatch","handleDivisionRemove","token","localStorage","getItem","payload","response","fetch","method","headers","authorization","body","JSON","stringify","result","json","status","alert","message","err","propTypes","string","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CACA;;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CACA;;AACA,SAASC,cAAT,QAA+B,oCAA/B;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,aAAT,OAAkD;AAAA;;AAAA,MAA3B;AAAEC,IAAAA,EAAF;AAAMC,IAAAA,QAAN;AAAgBC,IAAAA;AAAhB,GAA2B;AAChD;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,QAAMQ,oBAAoB,GAAG,YAAY;AACvC,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAG;AACdR,MAAAA,EADc;AAEdE,MAAAA,OAFc;AAGdD,MAAAA;AAHc,KAAhB;;AAKA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,sBAAD,EAAyB;AACnDC,QAAAA,MAAM,EAAE,KAD2C;AAEnDC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAER,KAAjB;AAAwB,0BAAgB;AAAxC,SAF0C;AAGnDS,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf;AAH6C,OAAzB,CAA5B;AAKA,YAAMS,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAT,EAArB;;AACA,UAAID,MAAM,CAACE,MAAP,KAAkB,IAAtB,EAA4B;AAC1BC,QAAAA,KAAK,CAACH,MAAM,CAACI,OAAR,CAAL;AACAlB,QAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACD;AACF,KAXD,CAWE,OAAOwB,GAAP,EAAY;AACZF,MAAAA,KAAK,CAACE,GAAG,CAACD,OAAL,CAAL;AACD;AACF,GArBD;AAsBA;AACF;AACA;AACA;AACA;;;AACE,sBACE,QAAC,GAAD;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAIpB;AAAJ;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,OAAO,EAAEG,oBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,C,CACD;;;GAtDSL,a;UAEUH,W;;;KAFVG,a;AAuDTA,aAAa,CAACwB,SAAd,GAA0B;AACxBvB,EAAAA,EAAE,EAAEL,SAAS,CAAC6B,MAAV,CAAiBC,UADG;AAExBxB,EAAAA,QAAQ,EAAEN,SAAS,CAAC6B,MAAV,CAAiBC,UAFH;AAGxBvB,EAAAA,OAAO,EAAEP,SAAS,CAAC6B,MAAV,CAAiBC;AAHF,CAA1B;AAMA,eAAe1B,aAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n// import redux hook\r\nimport { useDispatch } from 'react-redux';\r\n// importing bootstrap component\r\nimport Col from 'react-bootstrap/Col';\r\n// local redux action imported\r\nimport { setUserActions } from '../../../redux/features/usersSlice';\r\n/**\r\n * UserDivisions component\r\n * renders the users divisions\r\n * @param {*} props id, division, orgUnit\r\n * @returns the divisions the user has access to\r\n */\r\nfunction UserDivisions({ id, division, orgUnit }) {\r\n  // dispatch assigned the value of the useDispatch hook\r\n  const dispatch = useDispatch();\r\n  /**\r\n   * handlesDivisionRemove\r\n   * allows the user to remove a users permissions to a specific division.\r\n   * token retrieved from local storage\r\n   * payload object assigned the component props as attributes\r\n   * fetch request wrapped in a try catch block for error handling\r\n   * header contains the token and the body contains the payload\r\n   * if successful user is alerted and the setUsersAction is fired\r\n   * if not, user is alerted of the error\r\n   */\r\n  const handleDivisionRemove = async () => {\r\n    const token = localStorage.getItem('token');\r\n    const payload = {\r\n      id,\r\n      orgUnit,\r\n      division,\r\n    };\r\n    try {\r\n      const response = await fetch('user/remove/division', {\r\n        method: 'PUT',\r\n        headers: { authorization: token, 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload),\r\n      });\r\n      const result = await response.json();\r\n      if (result.status === 'ok') {\r\n        alert(result.message);\r\n        dispatch(setUserActions());\r\n      }\r\n    } catch (err) {\r\n      alert(err.message);\r\n    }\r\n  };\r\n  /**\r\n   * User division is returned here\r\n   * with division prop as text value\r\n   * the remove button has an onClick event that fires the handleDivisionRemove function\r\n   */\r\n  return (\r\n    <Col className=\"col-md-auto\">\r\n      <h5> division:</h5>\r\n      <p>{division}</p>\r\n      <button\r\n        className=\"btn btn-danger\"\r\n        type=\"button\"\r\n        onClick={handleDivisionRemove}\r\n      >\r\n        remove\r\n      </button>\r\n    </Col>\r\n  );\r\n}\r\n// propType validation\r\nUserDivisions.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  division: PropTypes.string.isRequired,\r\n  orgUnit: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default UserDivisions;\r\n"]},"metadata":{},"sourceType":"module"}