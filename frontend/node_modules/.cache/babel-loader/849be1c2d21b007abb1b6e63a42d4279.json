{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeak\\\\Desktop\\\\blah\\\\credentials-manager\\\\frontend\\\\src\\\\components\\\\components\\\\DashboardHeader.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // redux actions imported\n\nimport { toggleUsers } from '../../redux/features/dashboardSlice';\n/**\r\n * Dashboard header\r\n * Component uses bootstrap components and styling for layout and display\r\n * primary purpose to preserve a consistent display between layout views (credentials & users),\r\n * and offer navigation between them.\r\n * @returns dashboard header displaying user greeting, title, view users button\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DashboardHeader() {\n  _s();\n\n  // disaptch is assigned the value of the useDispatch hook\n  const dispatch = useDispatch(); // useSelector hook is used to sync with global state\n\n  const companyID = useSelector(state => state.orgData.loggedUser.id);\n  const adminRole = useSelector(state => state.orgData.loggedUser.roles.admin);\n  const viewUsers = useSelector(state => state.dashboard.viewUsers); // handleView function fires the toggleUsers action when called\n\n  const handleView = () => {\n    dispatch(toggleUsers());\n  };\n  /**\r\n   * Bootstrap components are used for layout\r\n   * the users company ID is displayed\r\n   * further a button or emoji is displayed to the user depending if they are and admin or not\r\n   * if they are the button is displayed with a onClick event that fires the handleView action\r\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"id: \", companyID]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-4\",\n        children: adminRole ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: handleView,\n          children: viewUsers ? 'View credentials' : 'View users'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"\\uD83D\\uDC31\\u200D\\uD83D\\uDC53\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashboardHeader, \"9R5TX5umQjZSZwx7FTmZRPGbqiA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = DashboardHeader;\nexport default DashboardHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardHeader\");","map":{"version":3,"sources":["C:/Users/leeak/Desktop/blah/credentials-manager/frontend/src/components/components/DashboardHeader.jsx"],"names":["React","useSelector","useDispatch","Container","Row","Col","toggleUsers","DashboardHeader","dispatch","companyID","state","orgData","loggedUser","id","adminRole","roles","admin","viewUsers","dashboard","handleView"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CACA;;AACA,SAASC,WAAT,QAA4B,qCAA5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,SAASC,eAAT,GAA2B;AAAA;;AACzB;AACA,QAAMC,QAAQ,GAAGN,WAAW,EAA5B,CAFyB,CAGzB;;AACA,QAAMO,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,UAAd,CAAyBC,EAArC,CAA7B;AACA,QAAMC,SAAS,GAAGb,WAAW,CAC1BS,KAAD,IAAWA,KAAK,CAACC,OAAN,CAAcC,UAAd,CAAyBG,KAAzB,CAA+BC,KADf,CAA7B;AAGA,QAAMC,SAAS,GAAGhB,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACQ,SAAN,CAAgBD,SAA5B,CAA7B,CARyB,CASzB;;AACA,QAAME,UAAU,GAAG,MAAM;AACvBX,IAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR;AACD,GAFD;AAGA;AACF;AACA;AACA;AACA;AACA;;;AACE,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAA,6BAASG,SAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACGK,SAAS,gBACR;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAEK,UAHX;AAAA,oBAKGF,SAAS,GAAG,kBAAH,GAAwB;AALpC;AAAA;AAAA;AAAA;AAAA,gBADQ,gBASR;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD;;GA9CQV,e;UAEUL,W,EAECD,W,EACAA,W,EAGAA,W;;;KARXM,e;AAgDT,eAAeA,eAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n// redux actions imported\r\nimport { toggleUsers } from '../../redux/features/dashboardSlice';\r\n/**\r\n * Dashboard header\r\n * Component uses bootstrap components and styling for layout and display\r\n * primary purpose to preserve a consistent display between layout views (credentials & users),\r\n * and offer navigation between them.\r\n * @returns dashboard header displaying user greeting, title, view users button\r\n */\r\nfunction DashboardHeader() {\r\n  // disaptch is assigned the value of the useDispatch hook\r\n  const dispatch = useDispatch();\r\n  // useSelector hook is used to sync with global state\r\n  const companyID = useSelector((state) => state.orgData.loggedUser.id);\r\n  const adminRole = useSelector(\r\n    (state) => state.orgData.loggedUser.roles.admin\r\n  );\r\n  const viewUsers = useSelector((state) => state.dashboard.viewUsers);\r\n  // handleView function fires the toggleUsers action when called\r\n  const handleView = () => {\r\n    dispatch(toggleUsers());\r\n  };\r\n  /**\r\n   * Bootstrap components are used for layout\r\n   * the users company ID is displayed\r\n   * further a button or emoji is displayed to the user depending if they are and admin or not\r\n   * if they are the button is displayed with a onClick event that fires the handleView action\r\n   */\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col className=\"col-md-4\">\r\n          <h3>id: {companyID}</h3>\r\n        </Col>\r\n        <Col className=\"col-md-4\">\r\n          <h1>Dashboard</h1>\r\n        </Col>\r\n        <Col className=\"col-md-4\">\r\n          {adminRole ? (\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              type=\"button\"\r\n              onClick={handleView}\r\n            >\r\n              {viewUsers ? 'View credentials' : 'View users'}\r\n            </button>\r\n          ) : (\r\n            <div>\r\n              <h1>🐱‍👓</h1>\r\n            </div>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default DashboardHeader;\r\n"]},"metadata":{},"sourceType":"module"}