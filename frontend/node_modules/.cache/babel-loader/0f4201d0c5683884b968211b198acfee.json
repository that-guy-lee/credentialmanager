{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeak\\\\Desktop\\\\blah\\\\credentials-manager\\\\frontend\\\\src\\\\components\\\\components\\\\Controls.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // react bootstrap components\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // toggleAdd redux action imported\n\nimport { toggleAdd } from '../../redux/features/dashboardSlice';\n/**\r\n * Controls component\r\n * @returns a button for adding credentials\r\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Controls() {\n  _s();\n\n  // dispatch assigned the value of the useDispatch hook\n  const dispatch = useDispatch(); // useSelector hook used to sync with global state\n\n  const viewCredentials = useSelector(state => state.dashboard.addComponent); // handleAddCredential fires the toggleAdd action\n\n  const handleAddCredential = () => {\n    dispatch(toggleAdd());\n  };\n  /**\r\n   * bootstrap components are used for layout\r\n   * add credentials button added with onClick event that fires the handleAddCredential function\r\n   * the buttons text also changes with its state, when in the add credential state, viewCredentials is displayed\r\n   */\n\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-md-12\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          type: \"button\",\n          onClick: handleAddCredential,\n          children: viewCredentials ? 'view credentials' : 'add credential'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Controls, \"qO14tWs6CF2/MIxpVhFGVNjjq6A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Controls;\nexport default Controls;\n\nvar _c;\n\n$RefreshReg$(_c, \"Controls\");","map":{"version":3,"sources":["C:/Users/leeak/Desktop/blah/credentials-manager/frontend/src/components/components/Controls.jsx"],"names":["React","useDispatch","useSelector","Container","Row","Col","toggleAdd","Controls","dispatch","viewCredentials","state","dashboard","addComponent","handleAddCredential"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CACA;;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB,C,CACA;;AACA,SAASC,SAAT,QAA0B,qCAA1B;AACA;AACA;AACA;AACA;;;;AACA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAMC,QAAQ,GAAGP,WAAW,EAA5B,CAFkB,CAGlB;;AACA,QAAMQ,eAAe,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBC,YAA5B,CAAnC,CAJkB,CAKlB;;AACA,QAAMC,mBAAmB,GAAG,MAAM;AAChCL,IAAAA,QAAQ,CAACF,SAAS,EAAV,CAAR;AACD,GAFD;AAGA;AACF;AACA;AACA;AACA;;;AACE,sBACE,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,2BACE,QAAC,GAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,iBADZ;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,OAAO,EAAEO,mBAHX;AAAA,oBAKGJ,eAAe,GAAG,kBAAH,GAAwB;AAL1C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GA7BQF,Q;UAEUN,W,EAEOC,W;;;KAJjBK,Q;AA+BT,eAAeA,QAAf","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n// react bootstrap components\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n// toggleAdd redux action imported\r\nimport { toggleAdd } from '../../redux/features/dashboardSlice';\r\n/**\r\n * Controls component\r\n * @returns a button for adding credentials\r\n */\r\nfunction Controls() {\r\n  // dispatch assigned the value of the useDispatch hook\r\n  const dispatch = useDispatch();\r\n  // useSelector hook used to sync with global state\r\n  const viewCredentials = useSelector((state) => state.dashboard.addComponent);\r\n  // handleAddCredential fires the toggleAdd action\r\n  const handleAddCredential = () => {\r\n    dispatch(toggleAdd());\r\n  };\r\n  /**\r\n   * bootstrap components are used for layout\r\n   * add credentials button added with onClick event that fires the handleAddCredential function\r\n   * the buttons text also changes with its state, when in the add credential state, viewCredentials is displayed\r\n   */\r\n  return (\r\n    <Container fluid>\r\n      <Row>\r\n        <Col className=\"col-md-12\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={handleAddCredential}\r\n          >\r\n            {viewCredentials ? 'view credentials' : 'add credential'}\r\n          </button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n"]},"metadata":{},"sourceType":"module"}